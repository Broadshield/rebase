name: üè∑Ô∏è Create Tag
on:
  push:
    branches:
      - "master"
    tags-ignore:
      - "**"

jobs:
  tag:
    runs-on: Ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
     - uses: actions/cache@v1
       id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
       with:
         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
         restore-keys: |
           ${{ runner.os }}-yarn-
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          dry_run: 'true'
      - name: Install project dependencies
        run: yarn --prefer-offline
      - name: Update version
        run: |
          yarn run build-checkout
          yarn run build
          current_version=$(node -p -e "require('./package.json').version")
          yarn version --patch

      - run: yarn run generate-docs
      - name: "Automated Version Bump - publish version"
        id: version-bump
        uses: "phips28/gh-action-bump-version@v8.0.18"
        with:
          tag-prefix: 'v'
          skip-tag: 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.version-bump.outputs.newTag}}
          release_name: Release ${{steps.version-bump.outputs.newTag}}
          body: ${{ steps.tag_version.outputs.changelog }}


